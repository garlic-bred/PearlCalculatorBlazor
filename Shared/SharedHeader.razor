@using PearlCalculatorBlazor.Localizer
@using PearlCalculatorLib.Settings
@inject TranslateText TransText
@inject NotificationService Notice
@inject SettingsManager SettingsManager

<PageHeader>
    <TitleTemplate>
        <Flex Align="center" Gap="10" Justify="center" Wrap="wrap">
            <Image Class="hide-on-mobile" Preview="false" Height="40" src="Logo.png" alt="banner"/>
            <Title Level="1" Style="margin-bottom: 0; font-size: 20px;">Pearl Calculator Blazor</Title>
            <Tooltip Style="display: flex; justify-items: center;" Title="@TranslateText.GetTranslateText("CheckForUpdate")">
                <Button
                    Size="@AntSizeLDSType.Small"
                    Shape="@ButtonShape.Round"
                    Icon="@IconType.Outline.Sync"
                    Loading="@(_currentVersion == "Loading...")"
                    @onclick="CheckForUpdate">
                    @_currentVersion
                </Button>
            </Tooltip>
        </Flex>
    </TitleTemplate>
    <PageHeaderExtra>
        <Flex Align="center" Gap="10" Justify="center" Wrap="wrap" Style="height: 100%;">
            <Dropdown Placement="Placement.BottomRight">
                <Overlay>
                    <Menu SelectedKeys="@(new[] { SettingsManager.SelectedCannon.CannonName })">
                        @foreach (var (cannonSettings, index) in SettingsManager.SettingsList.Select((value, index) => (value, index)))
                        {
                            <MenuItem
                                Icon="@IconType.Outline.Swap"
                                @key=index
                                @onclick="@(() => OnSelectSettings(index))">
                                <ChildContent>
                                    <Text Style="margin-left: 10px;">@cannonSettings.CannonName</Text>
                                </ChildContent>
                            </MenuItem>
                        }
                        <MenuItem
                            Icon="@IconType.Outline.Tool"
                            @onclick="OnEditSettings">
                            <ChildContent>
                                <Text Style="margin-left: 10px;">
                                    @TranslateText.GetTranslateText("EditCannonSettings")
                                </Text>
                            </ChildContent>
                        </MenuItem>
                    </Menu>
                </Overlay>
                <ChildContent>
                    <Button
                        Shape="@ButtonShape.Round"
                        Type="@ButtonType.Default"
                        Size="Large"
                        Icon="@IconType.Outline.Swap">
                        @SettingsManager.SelectedCannon.CannonName
                    </Button>
                </ChildContent>
            </Dropdown>
            <Dropdown Placement="Placement.BottomRight">
                <Overlay>
                    <Menu DefaultSelectedKeys="@(new[] { TranslateText.GetCurrentLanguage() })">
                        @foreach (var pair in TranslateText.LanguageDict)
                        {
                            <MenuItem @onclick="@(() => OnClickChangeLanguage(pair.Key))" @key=pair.Key>
                                <ChildContent>
                                    @pair.Value
                                </ChildContent>
                            </MenuItem>
                        }
                    </Menu>
                </Overlay>
                <ChildContent>
                    <Button
                        Shape="@ButtonShape.Round"
                        Type="@ButtonType.Default"
                        Size="Large"
                        Icon="@IconType.Outline.Translation">
                        Language
                    </Button>
                </ChildContent>
            </Dropdown>
            <Button
                class="github-icon"
                Shape="@ButtonShape.Round"
                Type="@ButtonType.Default"
                Size="Large"
                Icon="github">
                <a href="https://github.com/whats2000/PearlCalculatorBlazor" target="_blank">
                    GitHub
                </a>
            </Button>
            <Button
                Shape="@ButtonShape.Round"
                Type="@ButtonType.Default"
                Size="Large"
                NoSpanWrap="true"
                @onclick="ToggleTheme">
                <Flex Align="center">
                    @(GetThemeIcon())
                </Flex>
            </Button>
        </Flex>
    </PageHeaderExtra>
</PageHeader>

@{
    RenderFragment ModelFooterTemplate =
        @<Template>
            <Button OnClick="@HandleCancel" @key="@("back")">
                @TranslateText.GetTranslateText("StayVersion")
            </Button>
            <Button OnClick="@HandleOk"
                    @key="@("Refresh and Update")"
                    Type="@ButtonType.Primary">
                @TranslateText.GetTranslateText("UpdateNow")
            </Button>
        </Template>;
}

<Modal Title="@TranslateText.GetTranslateText("NewVersionAvailable")"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       Footer="@ModelFooterTemplate">
    <Title Level="4">@_modalContent</Title>
    <Paragraph>
        <ul>
            @foreach (var item in _updateNotes)
            {
                <li>@item</li>
            }
        </ul>
    </Paragraph>
</Modal>

<Drawer
    Width="350"
    Title="@TranslateText.GetTranslateText("EditCannonSettings")"
    Visible="@_editSettingsVisible"
    OnClose="@OnCloseEditSettings"
    Placement="left">
    <EditSettingSlideBar/>
</Drawer>